using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'interQuartile' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY values
     *  2. INTEGER_ARRAY freqs
     */

    public static void interQuartile(int[] values, int[] freqs)
    {
        // Print your answer to 1 decimal place within this function
        var list = new List<int>();
        var multiplier = 0;
        for (int i = 0; i < freqs.Length; i++)
        {
            multiplier = freqs[i];
            for (int r = 0; r < multiplier; r++)
            {
                list.Add(values[0 + i]);
            }
        }
        var S = list.ToArray();
        Array.Sort(S);
        var Q1 = 0.0;
        var Q3 = 0.0;
        var quartiles1 = new List<int>();
        var quartiles3 = new List<int>();
        var sum = 0;
        if (S.Length % 2 == 0)
        {
            for (int i = 0; i < S.Length/2; i++)
            {
                quartiles1.Add(S[i]);
            }
            if (quartiles1.Count % 2 == 0) // if the length of the first half is even
            {
                int skip = (quartiles1.Count / 2) - 1;
                var middle = quartiles1.Skip(skip).Take(2).ToArray();
                foreach (var item in middle)
                {
                    sum += item;
                }
                Q1 = sum / 2;
                sum = 0;
            }
            else
            {
                Q1 = quartiles1[quartiles1.Count / 2];
                sum = 0;
            }
            for (int i = S.Length - 1; i >= S.Length / 2; i--) // find Q3
            {
                quartiles3.Add(S[i]);
            }
            if (quartiles3.Count % 2 == 0)
            {
                int skip = (quartiles3.Count / 2);
                var middle = quartiles3.Skip(skip - 1).Take(2).ToArray();
                foreach (var item in middle)
                {
                    sum += item;
                }
                Q3 = sum / 2;
                sum = 0;
            }
            else
            {
                Q3 = quartiles3[quartiles3.Count / 2];
                sum = 0;
            }

        }
        else
        {
            for (int i = 0; i < S.Length / 2 + 1; i++)
            {
                quartiles1.Add(S[i]);
            }
            if (quartiles1.Count % 2 == 0)
            {
                int skip1 = (quartiles1.Count / 2) - 1;
                var middle1 = quartiles1.Skip(skip1).Take(2).ToArray();
                foreach (var item in middle1)
                {
                    sum += item;
                }
                Q1 = sum / 2;
                sum = 0;
            }
            else
            {
                Q1 = quartiles1[quartiles1.Count / 2];
            }
            for (int i = S.Length - 1; i >= S.Length / 2 + 1; i--)
            {
                quartiles3.Add(S[i]);
            }
            if (quartiles3.Count % 2 == 0)
            {
                var skip = (quartiles3.Count / 2) - 1;
                var middle = quartiles3.Skip(skip).Take(2).ToArray();
                foreach (var item in middle)
                {
                    sum += item;
                }
                Q3 = sum / 2;
                sum = 0;
            }
            else
            {
                Q3 = quartiles3[quartiles3.Count / 2];
            }
        }
        Console.WriteLine("{0:0.0}", Q3 - Q1);
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        int n = Convert.ToInt32(Console.ReadLine().Trim());

        var values = new int[n];
        var freqs = new int[n];
        values = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
        freqs = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();

        Result.interQuartile(values, freqs);
    }
}
